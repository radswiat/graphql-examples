import graphqlHTTP from 'express-graphql';var mongoose = require('mongoose')import * as graphql from 'graphql';import chalk from 'chalk';const cors = require('cors');/** * GraphQL mongodb * - graphql with mongodb * tu run examples from this tutorial go to: * > http://localhost:4000/graphql-mongo * and run: {   users {     _id,     name,     email   } }  MONGODB has to be installed! And it has to have users collection */export default class GraphQL {  app;  constructor(app) {    this.app = app;    // connect to mongodb    mongoose.connect('mongodb://localhost/test');    // create mongodb model    var Users = mongoose.model('Users', {      id: mongoose.Schema.Types.ObjectId,      name: String,      email: String    });    /**     * Define GraphQL users object     */    var UsersType = new graphql.GraphQLObjectType({      name: 'users',      fields: {        _id: {          type: graphql.GraphQLID        },        name: {          type: graphql.GraphQLString        },        email: {          type: graphql.GraphQLString        }      }    });    /**     * Define Query object     * Equal to:     type Query {        dice(numSides: Int): RandomDie      }     */    var typeQuery = new graphql.GraphQLObjectType({      name: 'Query',      fields: {        users: {          type: new graphql.GraphQLList(UsersType),          resolve: () => {            return new Promise((resolve, reject) => {              Users.find((err, users) => {                if(err){                  reject(err);                  return;                }                console.log(users);                resolve(users);              })            })          }        }      }    });    var schema = new graphql.GraphQLSchema({query: typeQuery});    // register graphql-mongo    // example is using cors() to allow calls from :3000 to :4000    // schema - defines schema    // rootValue - defines root schema values    this.app.use('/graphql-mongo', cors(), graphqlHTTP({      schema: schema,      graphiql: true,    }));  }}