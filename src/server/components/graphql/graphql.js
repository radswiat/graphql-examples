import graphqlHTTP from 'express-graphql';import {buildSchema} from 'graphql';var graphql = require('graphql');const cors = require('cors');import schema from './schema';export default class GraphQL {  app;  constructor(app) {    this.app = app;    // Construct a schema, using GraphQL schema language    var schema = buildSchema(`      type Query {        hello: String      }    `);    var fakeDatabase = {      'Radek': {        id: 0,        name: 'Radek',        email: 'rad.swiat@gmail.com'      },      'Aris': {        id: 'Aris',        name: 'Aris',        email: 'aris.m@gmail.com'      }    };    var userType = new graphql.GraphQLObjectType({      name: 'User',      fields: {        id: { type: graphql.GraphQLString },        name: { type: graphql.GraphQLString }      }    });    var queryType = new graphql.GraphQLObjectType({      name: 'Query',      fields: {        user: {          type: userType,          args: {            id: {type: graphql.GraphQLString}          },          resolve: function (_, {id}) {            return fakeDatabase[id];          }        }      }    })    var schema = new graphql.GraphQLSchema({query: queryType});    this.app.use('/graphql', cors(), graphqlHTTP({      schema: schema,      graphiql: true,      pretty: true    }));  }}